events {
    multi_accept on;
    use epoll;
}

http {
    proxy_cache off;

    upstream backend {
        server localhost:8000;
    }

    server {
        listen 80;
        server_name ${FQDN};

        location / {
            proxy_pass http://backend;

            proxy_request_buffering off;
            proxy_buffering off;

            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Connection "";
            client_max_body_size 0;
        }
    }

    server {
    	# SSL Configuration

    	listen 443 ssl http2 default_server;
    	listen [::]:443 ssl http2 default_server;
    	ssl on;

        ssl_certificate /etc/ssl/certs/${SSL_CERT_FILE_NAME};
        ssl_certificate_key /etc/ssl/private/${SSL_KEY_FILE_NAME};

        # from https://cipherli.st/
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        ssl_dhparam /etc/ssl/certs/dhparam.pem;


    	server_name ${FQDN};

    	location / {
    		proxy_pass http://backend;

    		proxy_request_buffering off;
    		proxy_buffering off;

    		proxy_http_version 1.1;
    		proxy_set_header Host $http_host;
    		proxy_set_header Connection "";
    		client_max_body_size 0;
    	}
    }
}
