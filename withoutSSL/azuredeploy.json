{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_DS2_v2",
        "allowedValues": [
          "Standard_DS2_v2",
          "Standard_DS3_v2",
          "Standard_DS4_v2"
        ],
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "scalityConnectImageURI": {
        "type": "string",
        "metadata": {
          "description": "The URI for Scality Connect image (vhd)."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61
      },
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Name of your existing Azure Blob Storage Account where you would like the data saved."
        },
        "maxLength": 24
      },
      "storageAccountAccessKey": {
        "type": "securestring",
        "metadata": {
          "description": "Access Key for your existing Azure Blob Storage Account."
        },
        "maxLength": 88
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of VM instances (10 or less)."
        },
        "maxValue": 10
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "sshPublicKey": {
        "type": "securestring",
        "metadata": {
          "description": "Your ssh public key."
        }
      }
    },
    "variables": {
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "longNamingInfix": "[toLower(parameters('vmssName'))]",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
      "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
      "subnetName": "[concat(variables('namingInfix'), 'subnet')]",
      "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
      "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
      "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
      "natStartPort": 50000,
      "natEndPort": 50119,
      "natBackendPort": 22,
      "nicName": "[concat(variables('namingInfix'), 'nic')]",
      "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
      "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
      "computeApiVersion": "2017-03-30",
      "networkApiVersion": "2017-04-01",
      "storageApiVersion": "2015-06-15",
      "insightsApiVersion": "2015-04-01"
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-04-01",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-04-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('longNamingInfix')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-04-01",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('bePoolName')]"
            }
          ],
          "loadBalancingRules": [
            {
                "name": "scalityrule",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                    },
                    "frontendPort": 80,
                    "backendPort": 8000,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 4,
                    "protocol": "Tcp",
                    "loadDistribution": "Default",
                    "backendAddressPool": {
                        "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('bePoolName'))]"
                    },
                    "probe": {
                        "id": "[concat(variables('lbID'), '/probes/', 'scalityprobe')]"
                    }
                }
            }
        ],
        "probes": [
            {
                "name": "scalityprobe",
                "properties": {
                    "protocol": "Tcp",
                    "port": 22,
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2
                }
            }
        ],
          "inboundNatPools": [
            {
              "name": "[variables('natPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPortRangeStart": "[variables('natStartPort')]",
                "frontendPortRangeEnd": "[variables('natEndPort')]",
                "backendPort": "[variables('natBackendPort')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[variables('namingInfix')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "sku": {
          "name": "[parameters('vmSku')]",
          "tier": "Standard",
          "capacity": "[parameters('instanceCount')]"
        },
        "properties": {
          "overprovision": true,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "name": "[concat('vmsosdisk', variables('namingInfix'))]",
                "createOption": "FromImage",
                "caching": "ReadOnly",
                "osType": "Linux",
                "image": {
                    "uri": "[parameters('scalityConnectImageURI')]"
                }
              }
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "customScript",
                  "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": true,
                    "protectedSettings": {
                      "commandToExecute": "[concat('/var/scality/run.sh ', parameters('storageAccountName'), ' ', parameters('storageAccountAccessKey'), ' ', variables('longNamingInfix'), '.' , resourceGroup().location, '.cloudapp.azure.com')]"
                    }
                  }
                }
              ]
            },
            "osProfile": {
              "computerNamePrefix": "[variables('namingInfix')]",
              "adminUsername": "[parameters('adminUsername')]",
              "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[parameters('sshPublicKey')]"
                        }
                    ]
                }
              }
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[variables('nicName')]",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[variables('ipConfigName')]",
                        "properties": {
                          "subnet": {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    ]
  }
